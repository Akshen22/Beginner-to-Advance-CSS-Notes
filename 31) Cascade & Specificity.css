1) Cascade:
When you have multiple CSS rules that apply to the same HTML, these rules conflict with each other, and the last one wins:

HTML:
<p>
  CSS is Cascading Style Sheets, and the cascading is important.
</p>

CSS:
p {
  color: orange;
  background-color: black;
}
p {
  color: blue;
  background-color: black;
}
p {
  color: yellow;
}

2) Specificity Hierarchy:
When the selectors are identical, or have the same importance, the rule that comes later wins. 
But what happens with different selectors?

HTML:
<p id="p1" class="para">
  CSS is Cascading Style Sheets, and the cascading is important.
</p>

CSS:
#p1 {
  color: purple;
}
.para {
  color: red;
}

/*The first selector wins, which is: 'p1' over here*/
/*Last value wins - first selector wins*/

3) Specificity Value:
What about the combination of selectors like #div1 p or .menu > ul > li?
There is a specificity value attached to each of the selectors or combination of selectors. 
The higher the specificity value, the more specific is the selector. 
Let's see how this value is calculated:
value of id: 100
value of class: 10
value of element: 1

HTML:
<div>
  <p class="para" id="p1">
    This is a paragraph with a <span class="sp">span</span> element
  </p>
</div>

CSS:
div .para .sp {
  color: blue;
}
#p1 > span {
  color: orange;
}

--> So who wins?
Ans.) div .para .sp: 20
      #p1 > span: 100
      'p gonna be orange'

4) 

