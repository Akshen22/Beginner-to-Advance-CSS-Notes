1) Basic margin:
The margin property defines the spacing around an element.

HTML:
<p>
  A paragraph with 2em margin on all four sides
</p>
<span>
  Another element here
</span

/* In HTML, a <span> element is a generic inline container for phrasing content, which does not inherently represent anything. It's often used to apply styles or manipulate a specific part of the text or content using CSS or JavaScript.
The <span> element has no semantic meaning on its own. Its main purpose is to allow developers to target a portion of the content for styling or scripting without affecting the document's structure.*/

CSS:
body {
  background-color: orange;
}
p {
  background-color: yellow;
  margin: 2em;
}


2) We can separately set margin properties for each side of an element using margin-top, margin-bottom, margin-left and margin-right.
CSS:
#first {
  background-color: yellow;
  margin-top: 50px;
  margin-left: 100px;
}
#second {
  background-color: orange;
  margin-right: 80px;
}


3) Margin shortcut:
Instead of using individual properties for top, bottom, right, and left margins, the single margin property can be used to specify different values for each direction.

a) Four values: If this property has four different values separated by spaces:
margin: 10px 20px 30px 40px;
10px is top margin 20px is right margin 30px is bottom margin 40px is left margin
Values get assigned in the clockwise direction starting from the top.

b) Three values: If this property has three values:
margin: 10px 20px 30px;
10px is top margin, 20px is right margin as well as the left margin, 30px is bottom margin 

c) Two values: If this property has two values:
margin: 10px 20px;
10px is top and bottom margin, 20px is right and left margin

d) One value: If this property has only one single value:
margin: 10px;
All four margins are 10px in size.


4) Negative Margins:
The margin properties can also accept negative values. This reduces the spacing around elements.
#first {
  background-color: orange;
  height: 100px;
}
#second {
  background-color: green;
  width: 50%;
  height: 100px;
  margin-top: -2em;
}

-> The green color overlies the orange color a bit!


5) Auto margin:
The margin property can be set to auto value. This horizontally centers an element.
The left and right margins are auto-calculated by equally splitting the remaining space.
a) margin: auto; (left & right are automatically adjusted)
b) margin-left: auto;
c) margin-right: auto:


6) Auto Margins with Width:
Some HTML elements start on a new line and occupy the full width available to them.
Let us have a look at some examples of elements showing this behavior:

HTML:
<div>
div element
</div>
<p>
p element
</p>
<h1>h1 to h6 elements</h1>

CSS:
div {
  background-color: red;
  margin-right: auto;
}

p {
  background-color: yellow;
}

h1 {
  background-color: green;
}

-> margin: auto; doesn't work here, so will also use fixed width!

Example:
HTML:
<header class="header-container">
  <div class="centered-element">I have a width, the margin: auto property works!</div>
</header>
<br>
<footer class="footer-container">
  <div class="non-centered-element">I do not have a width, the margin: auto property does not work!</div>
</footer>

CSS:
.header-container {
  background-color: blue;
}
.centered-element {
  width: 50%;
  background-color: yellow;
  margin: auto;
}
.footer-container {
  background-color: red;
}
.non-centered-element {
  background-color: yellow;
  margin: auto;
}

7) Margin Collapse:
HTML:
<div class="parent">
  <p>Welcome to BB Academy</p>
</div>

CSS:
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.parent {
  background-color: lightblue;
  height: 80px;
}

p {
  width: 50%;
  background-color: chartreuse;
  margin-top: 30px;
}

-> As we can see from the above code, we cannot see the margin space between p element and the div container with class parent.
This happens because of the concept of margin collapse.
What is Margin Collapse?
Margin collapse occurs when the vertical margins of adjacent elements meet or overlap. Instead of stacking on top of each other, the margins collapse into a single margin.
So, how do we add a margin space above the p element in our above code? The answer is padding.
We will learn about padding and how to use it in the next lesson.
