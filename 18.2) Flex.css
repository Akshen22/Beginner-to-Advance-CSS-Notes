6) Align Items: (to align the items in the other direction & stretch)
While justify-content allows us to change the placement and spacing of the items in one direction, we would also want to align the items in the other direction.
For example, with column direction, the items stretch to the full width of the container. Stretching is the default behaviour and this can be changed using the align-items property:

CSS:
.container {
  display: flex;
  padding: 10px;
  background-color: beige;
  min-height: 150px;
}
.container > div {
  background-color: orange;
  padding: 20px;
  margin: 5px;
}
.container > div:nth-child(2) {
  font-size: 2em;
}
.flex-start {
  align-items: flex-start;
}
.flex-end {
  align-items: flex-end;
}
.center {
  align-items: center;
}
.baseline {
  align-items: baseline;
}
.stretch {
  align-items: stretch; /* Default */
}

7) Align-Self:
When you want only one flex item to be aligned differently from the rest, you can use the align-self property.
But, unlike the previous properties that were applied to the container, this property has to be applied directly to that particular child element:

CSS:
.container {
  display: flex;
  height: 200px;
}
.container > div {
  padding: 20px;
  margin: 5px;
  background-color: orange;
}
.last {
  align-self: end;
}

8) Flex Grow:
Even though there's space on the right, the items only occupy as much space as needed. Sometimes, you might want one or all of the items to occupy this extra space available. 
That's when you can use the flex-grow property on individual flex items to specify a number.
The default value is 0, which is why the items occupy only as much space as required. When the value is more than 0 for some items, the extra space is divided proportionally among those items.

HTML:
<div class="container">
  <p class="p1">Sun</p>
  <p class="p2">The Sun is the star at the center of the Solar System.</p>
</div>

CSS:
.container {
  display: flex;
}
p {
  background-color: #f1f1f8;
  padding: 10px;
  border: 1px solid #a1a1a1;
}
.p1 {
  flex-grow: 1;
}
.p2 {
  flex-grow: 2;
}

a) Equal distribution:
.p1,.p2, .p3 {
  flex-grow: 1;
}

b) Unequal distribution:
.p1 {
  flex-grow: 1;
}
.p2, .p3 {
  flew-grow: 2
}

c) Similarly, "no growth"!

