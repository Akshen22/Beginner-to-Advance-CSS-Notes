6) Media Queries for Orientation:
We can also change some styles based on whether our web page is being viewed in: 
i) portrait orientation: when the screen width is smaller than the height or 
ii) landscape orientation: screen width is larger than the height!

Example:
p {
  width: 50%;
}
@media screen and (orientation: portrait) {
  p {
    width: 100%;
  }
}

7) Responsive Images:
To make images responsive without media queries, set their `max-width` to 100%. 
This ensures the image fills the screen on smaller devices, while not exceeding its original size (800px, for example) on larger screens. 
Resize the screen to see how the image adjustsâ€”no empty space on large screens or scrollbars on small ones.

Example:
img {
  width: 800px;
  max-width: 100%
}

8) Responsive Text:

h1 {
  font-size: 2rem;
}
h2 {
  font-size: 1.5rem;
}
@media screen and (min-width: 767px) {
  h1 {
    font-size: 2.5rem;
  }
  h2 {
    font-size: 2rem;
  }
}

In summary, the code sets different font sizes for <h1> and <h2> elements based on the screen width. 
On smaller screens, <h1> is 2rem and <h2> is 1.5rem. 
On larger screens (767px and above), <h1> becomes 2.5rem and <h2> becomes 2rem.

9) Responsive Blocks:
One of the earliest methods of creating responsive layouts is to set the width of blocks in percentages and stack them one below the other for mobile devices. 
With the help of media queries, we can use flex to stack them next to each other on larger screens; other options are float & grid!
