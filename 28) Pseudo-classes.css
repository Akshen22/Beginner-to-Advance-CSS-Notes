1) Overview:
When you want to apply styles to an element in a specific state;
Such as, when the element is hovered over by the mouse pointer or when the element is focused on by user's click or tap, you can use pseudo-classes like :hover or :focus.

Example:
HTML:
<form>
  <input type="text" id="name" placeholder="First name">
  <input type="text" placeholder="Last name">
  <button type="button">Submit</button>
</form>

CSS:
input[type="text"] {
  border: 1px solid lightgray;
  padding: 4px 8px;
  font-size: 1em;
}
button {
  border: none;
  padding: 4px 8px;
  background-color: purple;
  color: white;
  font-size: 1em;
}
#name:focus {
  outline: none;
  border: 1px solid black;
}
button:hover {
  background-color: darkblue;
}

2) Hover:
When a user takes the mouse pointer over an element, you can style it differently by appending :hover to the selector!

Example:
p:hover {
  color: brown;
}
#link1:hover {
  text-decoration: none;
}
#link2:hover {
  color: green;
}

3) Can also change styles of another element when one element is hovered, using CSS combinators:
HTML:
<div>
  Hover over me to see the paragraph element
</div>
<p>
  You can see me
</p>

CSS:
p {
  position: absolute;
  display: none;
  background-color: orange;
  padding: 8px;
}

div:hover + p {
  display: block;
}

4) Focus:
When you click or tap on an element, or when you use the tab key on keyboard to move to it, an element gets focus. 
By default, the browser adds a blue outline to an element that is focused. This can be changed using the :focus pseudo-class:

HTML:
<form>
  <h3>Register:</h3>
  <input type="text" id="name" placeholder="Full name">
  <button type="button">Submit</button>
</form>   

CSS:
#name:focus {
  outline: 1px solid black;
}
button:focus {
  outline: 1px solid darkblue;
}

5) Active:
When you click or tap on an element, it goes into the active state during the click.
syntax: 
button:active {
  background-color: purple;
}

6) Styling Links with Pseudo-classes:
Along with :hover, we can change the appearance of links depending on other user actions. 
We can change the link styling for when the user clicks the link or based on whether the link was previously visited or not!
:visited - Used if the link was previously visited
:active - Applied when the link is just clicked

HTML:
<p>
  First, take the cursor on the link to see the hover styles take effect.
  Next click on it to see the active styles take effect.
  Notice that the visited styles take effect after you have clicked it once.
</p>
<a href="#1">
  Hover and click
</a>

CSS:
a {
  color: tomato;
}

a:visited {
  color: darkgrey;
}

a:hover {
  color: orange;
  text-decoration: none;
}

a:active {
  color: darkred;
}

7) 

